package com.example.cve_2021_44228_rasp;

import javassist.ClassPool;
import javassist.CtClass;
import javassist.CtMethod;
import javassist.LoaderClassPath;

import java.io.ByteArrayInputStream;
import java.lang.instrument.ClassFileTransformer;
import java.lang.instrument.IllegalClassFormatException;
import java.security.ProtectionDomain;

public class JndiLookupTransformer implements ClassFileTransformer {

    public byte[] transform(ClassLoader loader,
                            String className,
                            Class<?> classBeingRedefined,
                            ProtectionDomain protectionDomain,
                            byte[] classfileBuffer) throws IllegalClassFormatException {

        if ( className.equals("org/apache/logging/log4j/core/lookup/JndiLookup") ) { // org.apache.logging.log4j.core.lookup.JndiLookup クラスを対象に
            try {
                ClassPool classPool = new ClassPool();
                classPool.appendSystemPath();
                classPool.appendClassPath(new LoaderClassPath(loader));

                ByteArrayInputStream stream = new ByteArrayInputStream(classfileBuffer);
                CtClass ctClass = classPool.makeClass(stream);

                CtMethod ctMethod = ctClass.getDeclaredMethod("lookup"); // lookup メソッドを対象に
                // 以下の処理を追加
                ctMethod.insertBefore(
                        "System.out.println(\"Before : \" + key);" + // 無害化処理の前
                            "key = com.example.cve_2021_44228_rasp.JndiLookupTransformer.sanitizing(key);" + // 無害化処理 (下記メソッド参照)
                            "System.out.println(\"After : \" + key);" // 無害化処理の後
                );
                return ctClass.toBytecode();
            } catch ( Exception ex ) {
                ex.printStackTrace();
            }
        }

        return null;
    }

    /**
     * 無害化 (※サンプル)
     */
    public static String sanitizing(String key) {
        System.out.println("JndiLookupTransformer#sanitizing");
        return key.replace('/', 'x'); // 「/」を「x」に変換
    }

}
